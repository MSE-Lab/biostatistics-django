# Generated by Django 4.2.24 on 2025-09-16 08:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0003_add_postreadstatus_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="作业标题")),
                (
                    "description",
                    models.TextField(
                        help_text="作业的详细说明和要求", verbose_name="作业描述"
                    ),
                ),
                (
                    "chapter",
                    models.IntegerField(
                        blank=True,
                        help_text="对应课程的第几章",
                        null=True,
                        verbose_name="所属章节",
                    ),
                ),
                (
                    "publish_time",
                    models.DateTimeField(
                        help_text="作业对学生可见的时间", verbose_name="发布时间"
                    ),
                ),
                (
                    "due_time",
                    models.DateTimeField(
                        help_text="学生提交作业的最后期限", verbose_name="截止时间"
                    ),
                ),
                (
                    "total_score",
                    models.IntegerField(
                        default=100, help_text="作业的满分分值", verbose_name="总分"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "草稿"),
                            ("published", "已发布"),
                            ("closed", "已截止"),
                            ("archived", "已归档"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "allow_late_submission",
                    models.BooleanField(
                        default=False,
                        help_text="是否允许学生在截止时间后提交",
                        verbose_name="允许逾期提交",
                    ),
                ),
                (
                    "max_attempts",
                    models.IntegerField(
                        default=1,
                        help_text="学生可以提交的最大次数，0表示无限制",
                        verbose_name="最大提交次数",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "作业",
                "verbose_name_plural": "作业",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="题目的具体描述", verbose_name="题目内容"
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("single_choice", "单选题"),
                            ("multiple_choice", "多选题"),
                            ("fill_blank", "填空题"),
                            ("short_answer", "简答题"),
                            ("essay", "论述题"),
                        ],
                        max_length=20,
                        verbose_name="题目类型",
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "基础"),
                            ("medium", "中等"),
                            ("hard", "困难"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="难度等级",
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        blank=True,
                        help_text="选择题的选项，JSON格式存储",
                        null=True,
                        verbose_name="选项",
                    ),
                ),
                (
                    "correct_answer",
                    models.TextField(
                        help_text="题目的标准答案", verbose_name="正确答案"
                    ),
                ),
                (
                    "explanation",
                    models.TextField(
                        blank=True,
                        help_text="对正确答案的详细解释",
                        verbose_name="答案解析",
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        default=10, help_text="该题目的分值", verbose_name="分值"
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="题目在作业中的显示顺序",
                        verbose_name="排序",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "题目",
                "verbose_name_plural": "题目",
                "ordering": ["assignment", "order", "id"],
            },
        ),
        migrations.CreateModel(
            name="QuestionScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(help_text="该题目的得分", verbose_name="得分"),
                ),
                (
                    "teacher_comment",
                    models.TextField(
                        blank=True,
                        help_text="教师对该题目的具体评价",
                        verbose_name="教师评语",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "题目得分记录",
                "verbose_name_plural": "题目得分记录",
            },
        ),
        migrations.CreateModel(
            name="StudentSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "answers",
                    models.JSONField(
                        help_text="学生对各题目的答案，JSON格式存储",
                        verbose_name="学生答案",
                    ),
                ),
                (
                    "submit_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="提交时间"),
                ),
                (
                    "score",
                    models.FloatField(
                        blank=True,
                        help_text="作业的总得分",
                        null=True,
                        verbose_name="得分",
                    ),
                ),
                (
                    "is_graded",
                    models.BooleanField(default=False, verbose_name="是否已批改"),
                ),
                (
                    "is_late",
                    models.BooleanField(default=False, verbose_name="是否逾期提交"),
                ),
                (
                    "teacher_comments",
                    models.TextField(
                        blank=True,
                        help_text="教师对学生作业的整体评价",
                        verbose_name="教师评语",
                    ),
                ),
                (
                    "graded_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="批改时间"
                    ),
                ),
            ],
            options={
                "verbose_name": "学生提交记录",
                "verbose_name_plural": "学生提交记录",
                "ordering": ["-submit_time"],
            },
        ),
        migrations.RemoveConstraint(
            model_name="postreadstatus",
            name="unique_user_post_read_status",
        ),
        migrations.AlterUniqueTogether(
            name="postreadstatus",
            unique_together={("user", "post")},
        ),
        migrations.AddField(
            model_name="studentsubmission",
            name="assignment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.assignment",
                verbose_name="作业",
            ),
        ),
        migrations.AddField(
            model_name="studentsubmission",
            name="graded_by",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"user_type": "teacher"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="graded_submissions",
                to=settings.AUTH_USER_MODEL,
                verbose_name="批改教师",
            ),
        ),
        migrations.AddField(
            model_name="studentsubmission",
            name="student",
            field=models.ForeignKey(
                limit_choices_to={"user_type": "student"},
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="学生",
            ),
        ),
        migrations.AddField(
            model_name="questionscore",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.question",
                verbose_name="题目",
            ),
        ),
        migrations.AddField(
            model_name="questionscore",
            name="submission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="question_scores",
                to="core.studentsubmission",
                verbose_name="提交记录",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="assignment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="core.assignment",
                verbose_name="所属作业",
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="created_by",
            field=models.ForeignKey(
                limit_choices_to={"user_type": "teacher"},
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建教师",
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="teaching_class",
            field=models.ForeignKey(
                help_text="作业分发的目标教学班",
                on_delete=django.db.models.deletion.CASCADE,
                to="core.teachingclass",
                verbose_name="教学班",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="studentsubmission",
            unique_together={("assignment", "student", "submit_time")},
        ),
        migrations.AlterUniqueTogether(
            name="questionscore",
            unique_together={("submission", "question")},
        ),
    ]
